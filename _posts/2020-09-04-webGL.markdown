---
layout: post  
title: "WebGL基础"  
date: 2020-09-04  
categories: threeJs  
tags: threeJs WebGL  
---  

# 基础的WebGL绘制  
- 创建WebGL上下文  
  ``` javascript  
    canvas.getContext('webgl')
  ```  
- 创建WebGL程序  
  这里的WebGL程序是一个WebGLProgram, 它是给GPU运行着色器的程序
  ``` javascript  
    // 定点着色器
    const vertex = `
      attribute vec2 position;

      void main() {
        gl_PointSize = 1.0;
        gl_Position = vec4(position, 1.0, 1.0);
      }
    `;

    // 片元着色器
    const fragment = `
      precision mediump float;

      void main()
      {
        gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);
      }    
    `;
  ```  
- 将这两个着色器创建成shader对象  
  ``` javascript  
    // createShader shaderSource compileShader
    const vertexShader = gl.createShader(gl.VERTEX_SHADER);
    gl.shaderSource(vertexShader, vertex);
    gl.compileShader(vertexShader);

    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
    gl.shaderSource(fragmentShader, fragment);
    gl.compileShader(fragmentShader);
  ```  
- 将这两个对象和上下文关联  
  ``` javascript  
    // createProgramme attachShader linkProgram
    const program = gl.createProgram();
    gl.attachShader(program, vertexShader);
    gl.attachShader(program, fragmentShader);
    gl.linkProgram(program);

    // 通过useProgram选择启用这个WebGLProgram对象
    gl.useProgram(program);
  ```  
- 将数据写入缓存区  
  ``` javascript  
    const points = new Float32Array([ -1, -1, 0, 1, 1, -1,]);
  ```  
- 将定义好的数据写入WebGL缓存区  
  ``` javascript  
    // createBuffer、bindBuffer、bufferData
    const bufferId = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, bufferId);
    gl.bufferData(gl.ARRAY_BUFFER, points, gl.STATIC_DRAW);
  ```  
- 将缓存区的数据读取到GPU  
  ``` javascript  
    // 
    const vPosition = gl.getAttribLocation(program, 'position'); // 获取顶点着色器中的position变量的地址
    gl.vertexAttribPointer(vPosition, 2, gl.FLOAT, false, 0, 0); // 给变量设置长度和类型
    gl.enableVertexAttribArray(vPosition); // 激活这个变量
  ```  
- 执行着色器完成绘制  
  ``` javascript  
    gl.clear(gl.COLOR_BUFFER_BIT);
    gl.drawArrays(gl.TRIANGLES, 0, points.length / 2);
  ```  